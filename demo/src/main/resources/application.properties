# enable/disable operations (spring beans will or will not be in the context)
management.endpoint.shutdown.enabled=false
management.security.enabled=true
# control exposure of operations
management.endpoints.jmx.exposure.include=*
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
# JMX
spring.jmx.unique-names=true
management.endpoints.jmx.domain=com.example.myapp

# TODO configure SSL
spring.boot.admin.client.url=http://localhost:8081
#These two are needed so that the client can register at the protected server api
# TODO set it from java
spring.boot.admin.client.username=admin
spring.boot.admin.client.password=admin

# TODO set it from java
# TODO how to pass token instead of login/password? May be we should use custom metadata?
#These two are needed so that the server can access the protected client endpoints
spring.boot.admin.client.instance.metadata.user.name=admin
spring.boot.admin.client.instance.metadata.user.password=admin
# Spring Boot Admin recognizes this as multiple instances of the same app
spring.boot.admin.client.instance.metadata.applicationId=my-app
spring.boot.admin.client.instance.metadata.instanceId=${random.int[0,1000]}

# TODO monitor cache

# application information (for info endpoint)
info.app.author=kslisenko
info.app.name=my-app
info.something.else=else

# application settings
#spring.application.name=my-application
debug=true